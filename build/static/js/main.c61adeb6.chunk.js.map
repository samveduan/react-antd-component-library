{"version":3,"sources":["ajax/http.js","pages/login/login.jsx","route-config/index.js","components/left-nav/index.jsx","pages/home/home.jsx","pages/charts/line.jsx","pages/charts/bar.jsx","pages/charts/pie.jsx","pages/data-input/form.jsx","pages/data-show/table.jsx","pages/data-show/tabs.jsx","pages/feedback/modal.jsx","pages/feedback/notification.jsx","pages/admin/admin.jsx","App.js","index.js","assets/images/logo.png"],"names":["_this","HTTP","axios","create","baseURL","timeout","responseType","params","transformResponse","data","abc","interceptors","request","use","config","headers","TOKEN","localStorage","error","Promise","reject","response","res","$notify","title","message","duration","layout","labelCol","span","wrapperCol","tailLayout","offset","Login","formRef","React","createRef","onFinish","values","$http","method","url","JSON","stringify","then","props","history","replace","catch","err","description","onFinishFailed","errorInfo","className","src","logo","alt","ref","this","name","preserve","Item","label","style","marginBottom","display","width","marginRight","rules","required","pattern","placeholder","prefix","UserOutlined","Password","KeyOutlined","type","htmlType","Component","MenuList","key","icon","SnippetsFilled","PieChartFilled","children","ApiFilled","PieChartOutlined","SubMenu","LeftNav","state","rootSubmenuKeys","openKeys","onOpenChange","latestOpenKey","find","indexOf","setState","getMenuNodes","path","location","pathname","map","item","push","cItem","Link","to","menuNodes","theme","mode","selectedKeys","defaultOpenKeys","height","borderRight","paddingTop","withRouter","Option","TextArea","Home","tableData","selectedRowKeys","total","columns","dataIndex","addModalVisible","onSelectChange","console","log","onChange","pageNumber","pageSize","getData","showAddModal","addModalHandleOk","e","addModalFormRef","current","validateFields","resetFields","info","addModalHandCancel","length","get","resp","ajaxData","i","rows","id","content","rowSelection","extra","ghost","size","PlusOutlined","onClick","dataSource","pagination","bordered","onRow","record","event","onDoubleClick","showSizeChanger","showQuickJumper","showTotal","visible","onOk","onCancel","okText","cancelText","maskClosable","destroyOnClose","noStyle","min","max","allowClear","value","Group","Line","my_option","xAxis","boundaryGap","yAxis","visualMap","show","dimension","seriesIndex","pieces","gt","lt","color","series","smooth","symbol","lineStyle","markLine","areaStyle","echarts","init","document","getElementById","setOption","Bar","Pie","FormCom","target","onReset","onGenderChange","TableCom","paddingBottom","handleDeleteArticle","TabPane","callback","TabsCom","defaultActiveKey","tab","ModalCom","showModal","handleOk","handCancel","handleAfterClose","afterClose","MenuCom","Header","Content","Sider","Admin","collapsed","onCollapse","Number","Redirect","menu","rel","href","preventDefault","position","zIndex","paddingLeft","fontSize","fontWeight","textAlign","overlay","trigger","DownOutlined","background","collapsible","padding","margin","overflow","Switch","Route","component","HomeCom","LineCom","BarCom","PieCom","NotificationCom","App","HashRouter","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.c61adeb6.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nlet _this = this;\r\n\r\nlet HTTP = axios.create({\r\n  baseURL:'/',\r\n  timeout: 10000,        //单位是ms，请求超过这个时间就取消，即请求超时\r\n  responseType: 'json',  //后端返回的数据类型\r\n  // header:{  //自定义请求头\r\n     'custom-header':'xiao',  //Request Headers里面就多了一个custom-header:xiao，后端可以拿到这个数据\r\n  //   'content-type':'application/x-www-form-urlencoded'  //设置这个，那么经过transformRequest处理之后的数据格式就变为了  miaov=ketang&username=leo，只支持POST请求方式\r\n  // },\r\n  params: {  //查询字符串，传给后端的数据，不管是get还是post请求，这条数据都会附在url后面，发送给后端\r\n    //TOKEN: localStorage['TOKEN']\r\n  },\r\n  transformResponse: [function (data) {   //数组格式，用于处理返回的数据格式，data是后端发送回来的数据\r\n    data.abc = 'miaov'  //对返回数据做进一步处理，请求此类地址的返回值都拥有abc这个属性，值是miaov\r\n    return data;  //需要return出来\r\n  }]\r\n});\r\n\r\n//添加一个请求拦截器：请求之前的拦截\r\nHTTP.interceptors.request.use(function (config) {  //config就是自定义请求的配置信息，即HTTP的配置参数\r\n  //在发送请求之前做某事\r\n  //console.log(\"拦截请求之前提交的数据：\");\r\n  //console.log(config)\r\n  //这里可以对配置项config做处理，取消某些配置或增加\r\n  config.headers.TOKEN = localStorage['TOKEN'];\r\n  return config;  //return config请求会继续进行，否则请求就被拦截了\r\n}, function (error) {\r\n  //请求错误时做些事\r\n  return Promise.reject(error);\r\n});\r\n\r\n//添加一个请求拦截器：请求之后的拦截\r\nHTTP.interceptors.response.use(res => {\r\n  // 响应失败\r\n  // if (!res.data.success) {\r\n  //   Toast(res.data.msg);\r\n  // }\r\n\r\n  /**\r\n  * refresh_token过期\r\n  * 1、清空本地token\r\n  * 2、刷新页面\r\n  */\r\n //console.log(\"拦截器拦截的数据：\");\r\n //console.log(res);\r\n\r\n  // if (res.data.code === '004-1') {\r\n  //   //localStorage.setItem('TOKEN', '')\r\n  //   localStorage['TOKEN'] = '';\r\n  //   window.location.reload();\r\n  // }\r\n\r\n  return res.data;\r\n}, error => {\r\n  _this.$notify.error({\r\n    title: \"错误\",\r\n    message: error.message,\r\n    duration: 0\r\n  });\r\n})\r\n\r\nexport default HTTP;","import React, { Component } from 'react'\r\nimport './login.less'\r\nimport logo from '../../assets/images/logo.png'\r\nimport { Form, Input, Button, notification } from 'antd';\r\nimport { UserOutlined, KeyOutlined } from '@ant-design/icons';\r\nimport $http from '../../ajax/http.js'\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 0,\r\n    },\r\n    wrapperCol: {\r\n        span: 24,\r\n    }\r\n};\r\n\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 0, span: 24 },\r\n};\r\n\r\nexport default class Login extends Component {\r\n    // 表单相关\r\n    formRef = React.createRef(); // 定义一个表单\r\n\r\n    onFinish = values => {\r\n        $http({\r\n          method: \"POST\",\r\n          url: \"/article/check_login_status/\",\r\n          data: JSON.stringify(values)\r\n        })\r\n        .then(res => {\r\n            localStorage['token'] = 1;\r\n            this.props.history.replace(\"/\");\r\n        })\r\n        .catch(err => {\r\n            notification[\"error\"]({\r\n                message: '错误图示',\r\n                description:\r\n                  '用户名或密码错误',\r\n            });\r\n        });\r\n    }\r\n\r\n    onFinishFailed = errorInfo => {\r\n        notification[\"error\"]({\r\n            message: '错误图示',\r\n            description:\r\n              '用户名或密码错误',\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login\">\r\n                <header className=\"login-header\">\r\n                    <img src={logo} alt=\"logo\"/>\r\n                    <h1>React App管理系统</h1>\r\n                </header>\r\n\r\n                <section className=\"login-content\">\r\n                    <h2>用户登陆</h2>\r\n                    <div>\r\n                        <Form {...layout} ref={this.formRef} name=\"control-ref\" preserve={false} onFinish={this.onFinish} onFinishFailed={this.onFinishFailed}>\r\n                            <Form.Item label=\"账号\" style={{ marginBottom: 0 }}>\r\n                                <Form.Item\r\n                                    name=\"account\"\r\n                                    style={{ display: 'inline-block', width: 'calc(100%)', marginRight: 15 }}\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: \"账号不能为空\"\r\n                                        },\r\n                                        {\r\n                                            pattern: /^[a-zA-Z0-9_()（）\\u4e00-\\u9fa5]{1,32}$/,\r\n                                            message: \"账号为1至32位汉字、字母、数字、下划线或中英文括号\"\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input\r\n                                        placeholder=\"请输入账号\"\r\n                                        prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                                    />\r\n                                </Form.Item>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"密码\" style={{ marginBottom: 0 }}>\r\n                                <Form.Item\r\n                                    name=\"password\"\r\n                                    style={{ display: 'inline-block', width: 'calc(100%)' }}\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: \"密码不能为空\"\r\n                                        },\r\n                                        {\r\n                                            pattern: /^[a-zA-Z0-9_()（）\\u4e00-\\u9fa5]{1,32}$/,\r\n                                            message: \"密码为1至32位汉字、字母、数字、下划线或中英文括号\"\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input.Password \r\n                                        placeholder=\"请输入密码\"\r\n                                        prefix={<KeyOutlined className=\"site-form-item-icon\" />} \r\n                                    />\r\n                                </Form.Item>\r\n                            </Form.Item>\r\n                            <Form.Item {...tailLayout}>\r\n                                <Button type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\" }}>\r\n                                    登录\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { SnippetsFilled, PieChartFilled, ApiFilled, PieChartOutlined } from '@ant-design/icons';\r\n\r\nconst MenuList = [\r\n    {\r\n        title: '首页', // 菜单标题名称\r\n        key: '/home', // 对应的path\r\n        icon: SnippetsFilled // 图标名称\r\n    },\r\n    {\r\n        title: '数据录入',\r\n        key: '/data_input',\r\n        icon: PieChartFilled,\r\n        children: [ // 子菜单列表\r\n            {\r\n                title: 'form',\r\n                key: '/form',\r\n                icon: 'bars'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: '数据展示',\r\n        key: '/data_show',\r\n        icon: ApiFilled,\r\n        children: [\r\n            {\r\n                title: 'table',\r\n                key: '/table',\r\n                icon: 'bar-chart'\r\n            },\r\n            {\r\n                title: 'tabs',\r\n                key: '/tabs',\r\n                icon: 'line-chart'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: '反馈',\r\n        key: '/feedback',\r\n        icon: ApiFilled,\r\n        children: [\r\n            {\r\n                title: 'modal',\r\n                key: '/modal',\r\n                icon: 'bar-chart'\r\n            },\r\n            {\r\n                title: 'notification',\r\n                key: '/notification',\r\n                icon: 'line-chart'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: '图表',\r\n        key: '/charts',\r\n        icon: PieChartOutlined,\r\n        children: [\r\n            {\r\n                title: 'bar',\r\n                key: '/bar',\r\n                icon: 'bar-chart'\r\n            },\r\n            {\r\n                title: 'line',\r\n                key: '/line',\r\n                icon: 'line-chart'\r\n            },\r\n            {\r\n                title: 'pie',\r\n                key: '/pie',\r\n                icon: 'pie-chart'\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\nexport default MenuList","import React, { Component } from 'react'\r\nimport { Menu } from 'antd';\r\nimport { Link, Redirect, withRouter } from 'react-router-dom'\r\nimport MenuList from '../../route-config/index'\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nclass LeftNav extends Component {\r\n    state = {\r\n        rootSubmenuKeys: [], //只展开当前父级菜单\r\n        openKeys: [], // 默认展开的菜单项\r\n    };\r\n\r\n    // 只展开当前父级菜单\r\n    onOpenChange = openKeys => {\r\n        const latestOpenKey = openKeys.find(key => this.state.openKeys.indexOf(key) === -1);\r\n        if (this.state.rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\r\n            this.setState({ openKeys });\r\n        } else {\r\n            this.setState({\r\n                openKeys: latestOpenKey ? [latestOpenKey] : [],\r\n            });\r\n        }\r\n    };\r\n\r\n    // 获取左侧菜单\r\n    getMenuNodes = MenuList => {\r\n        const path = this.props.location.pathname\r\n\r\n        return MenuList.map(item => {\r\n            if (!item.children) {\r\n                return (\r\n                    <Menu.Item key={item.key} icon={<item.icon />}>\r\n                        <Link to={item.key}>\r\n                            <span>{item.title}</span>\r\n                        </Link>\r\n                    </Menu.Item>\r\n                )\r\n            } else {\r\n                this.state.rootSubmenuKeys.push(item.key);\r\n\r\n                // 查找一个与当前请求路径匹配的子Item\r\n                const childItem = item.children.find(cItem => path.indexOf(cItem.key) === 0);\r\n                // 如果存在, 说明当前item的子列表需要打开\r\n                if (childItem) {\r\n                    this.setState({\r\n                        openKeys: [item.key]\r\n                    })\r\n                }\r\n\r\n                return (\r\n                    <SubMenu\r\n                        key={item.key}\r\n                        icon={<item.icon />}\r\n                        title={item.title}\r\n                    >\r\n                        {this.getMenuNodes(item.children)}\r\n                    </SubMenu>\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.menuNodes = this.getMenuNodes(MenuList);\r\n    }\r\n\r\n    render() {\r\n        /*selectedKeys：控制默认高亮菜单项，defaultOpenKeys、openKeys、onOpenChange：控制菜单展开*/\r\n        return (\r\n            <Menu\r\n                theme=\"dark\"\r\n                mode=\"inline\"\r\n                selectedKeys={this.props.location.pathname}\r\n                defaultOpenKeys={this.state.openKeys}\r\n                openKeys={this.state.openKeys}\r\n                onOpenChange={this.onOpenChange}\r\n                style={{ height: '100%', borderRight: 0, paddingTop: '60px' }}\r\n            >\r\n                {\r\n                    this.menuNodes\r\n                }\r\n            </Menu>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(LeftNav)\r\n","import React, { Component } from 'react'\r\nimport { Table, Pagination, Card, Modal, Button, Form, Input, InputNumber, Select, Checkbox, Radio, notification } from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport axios from 'axios'\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 5,\r\n    },\r\n    wrapperCol: {\r\n        span: 19,\r\n    }\r\n};\r\n\r\nexport default class Home extends Component {\r\n    state = {\r\n        tableData: [],\r\n        selectedRowKeys: [], // Check here to configure the default column\r\n        total: 0, // for Pagination\r\n        columns: [\r\n            {\r\n                title: 'ID',\r\n                dataIndex: 'id',\r\n                width: 30,\r\n            },\r\n            {\r\n                title: '标题',\r\n                dataIndex: 'title',\r\n                width: 500,\r\n            },\r\n            {\r\n                title: '内容',\r\n                dataIndex: 'content'\r\n            },\r\n        ],\r\n        addModalVisible: false\r\n    };\r\n\r\n    handleDeleteArticle() {\r\n        if (this.state.selectedRowKeys.length === 0) {\r\n            notification['error']({\r\n                message: '错误提示',\r\n                description:\r\n                    '请选择要删除的内容！',\r\n            });\r\n        } else {\r\n            notification['success']({\r\n                message: '正确提示',\r\n                description:\r\n                    `将要删除${JSON.stringify(this.state.selectedRowKeys)}`,\r\n            });\r\n        }\r\n    }\r\n\r\n    onSelectChange = selectedRowKeys => {\r\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n        this.setState({ selectedRowKeys });\r\n    };\r\n\r\n    // 获取表格数据\r\n    getData(pageNumber, pageSize) {\r\n        axios.get(`/article/all/?pageSize=${pageSize}&pageNumber=${pageNumber}&sortName=id&sortOrder=desc&_=1595230808893`).then((resp) => {\r\n            console.log(\"all data:\");\r\n            console.log(resp);\r\n            let ajaxData = [];\r\n            for (let i = 0; i < resp.data.rows.length; i++) {\r\n                ajaxData.push({\r\n                    key: resp.data.rows[i].id,\r\n                    id: resp.data.rows[i].id,\r\n                    title: resp.data.rows[i].title,\r\n                    content: resp.data.rows[i].content,\r\n                });\r\n            }\r\n\r\n            this.setState({\r\n                tableData: ajaxData,\r\n                total: resp.data.total\r\n            })\r\n\r\n        }, (err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    onChange = (pageNumber, pageSize) => {\r\n        this.getData(pageNumber, pageSize);\r\n    };\r\n\r\n    // add modal\r\n    showAddModal = () => {\r\n        this.setState({\r\n            addModalVisible: true\r\n        })\r\n    }\r\n\r\n    addModalHandleOk = e => {\r\n        this.addModalFormRef.current.validateFields()\r\n        .then(values => {\r\n            this.addModalFormRef.current.resetFields();\r\n            this.setState({\r\n                addModalVisible: false\r\n            });\r\n        })\r\n        .catch(info => {\r\n            console.log('Validate Failed:', info);\r\n        });\r\n    }\r\n\r\n    addModalHandCancel = e => {\r\n        this.addModalFormRef.current.resetFields();\r\n        this.setState({\r\n            addModalVisible: false\r\n        })\r\n    }\r\n\r\n    // 表单相关\r\n    addModalFormRef = React.createRef(); // 定义一个表单\r\n\r\n    componentDidMount() {\r\n        this.getData(1, 10);\r\n    }\r\n\r\n    render() {\r\n        const { selectedRowKeys } = this.state;\r\n\r\n        const rowSelection = {\r\n            selectedRowKeys,\r\n            onChange: this.onSelectChange\r\n        };\r\n\r\n        return (\r\n            <Card title=\"Default size card\" extra={<Button type=\"primary\" ghost size=\"small\" icon={<PlusOutlined/>} onClick={this.showAddModal}>添加</Button>} style={{ width: '100%' }}>\r\n                <Table columns={this.state.columns} dataSource={this.state.tableData} rowSelection={rowSelection} pagination={false} bordered\r\n                    onRow={record => {\r\n                        return {\r\n                            onClick: event => { console.log(record) },\r\n                            onDoubleClick: event => { console.log(event) }\r\n                        }\r\n                    }}\r\n                >\r\n                </Table>\r\n                <div style={{ height: 15 }}></div>\r\n                <Pagination\r\n                    total={this.state.total}\r\n                    showSizeChanger\r\n                    showQuickJumper\r\n                    showTotal={total => `共 ${total} 条`}\r\n                    onChange={this.onChange}\r\n                />\r\n                <Modal\r\n                    title=\"创建\"\r\n                    visible={this.state.addModalVisible}\r\n                    width={660}\r\n                    onOk={this.addModalHandleOk}\r\n                    onCancel={this.addModalHandCancel}\r\n                    okText=\"确认\"\r\n                    cancelText=\"取消\"\r\n                    maskClosable={false}\r\n                    destroyOnClose={true}\r\n                >\r\n                    <Form {...layout} ref={this.addModalFormRef} name=\"control-ref\" preserve={false}>\r\n                        <Form.Item label=\"账号\" style={{ marginBottom: 0 }}>\r\n                            <Form.Item\r\n                                name=\"account\"\r\n                                style={{ display: 'inline-block', width: 'calc(80% - 8px)', marginRight: 15 }}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: \"账号不能为空\"\r\n                                    },\r\n                                    {\r\n                                        pattern: /^[a-zA-Z0-9_()（）\\u4e00-\\u9fa5]{1,32}$/,\r\n                                        message: \"账号为1至32位汉字、字母、数字、下划线或中英文括号\"\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                style={{ display: 'inline-block', width: 'calc(20% - 8px)' }}\r\n                            >\r\n                                <Checkbox>USBKEY</Checkbox>\r\n                            </Form.Item>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"姓名\" style={{ marginBottom: 0 }}>\r\n                            <Form.Item\r\n                                name=\"name\"\r\n                                style={{ display: 'inline-block', width: 'calc(80% - 8px)' }}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: \"姓名不能为空\"\r\n                                    },\r\n                                    {\r\n                                        pattern: /^[a-zA-Z0-9_()（）\\u4e00-\\u9fa5]{1,32}$/,\r\n                                        message: \"姓名为1至32位汉字、字母、数字、下划线或中英文括号\"\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"个人空间配额\">\r\n                            <Form.Item\r\n                                name=\"space\"\r\n                                noStyle\r\n                                rules={[{\r\n                                    required: true,\r\n                                    message: \"个人空间配额不能为空\"\r\n                                }, {\r\n                                    type: 'number',\r\n                                    min: 1,\r\n                                    max: 100,\r\n                                    message: \"个人空间配额为1-100之间整数\"\r\n                                }\r\n                                ]}\r\n                            >\r\n                                <InputNumber style={{ width: 160, marginRight: 15 }} placeholder=\"1-100之间整数\" />\r\n                            </Form.Item>\r\n                        G\r\n                </Form.Item>\r\n                        <Form.Item label=\"私密空间配额\">\r\n                            <Form.Item\r\n                                name=\"private\"\r\n                                noStyle\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: \"私密空间配额不能为空\"\r\n                                    }, {\r\n                                        type: 'number',\r\n                                        min: 1,\r\n                                        max: 100,\r\n                                        message: \"私密空间配额为1-100之间整数\"\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <InputNumber style={{ width: 160, marginRight: 15 }} placeholder=\"1-100之间整数\" />\r\n                            </Form.Item>\r\n                        G\r\n                </Form.Item>\r\n                        <Form.Item label=\"证书级别\" style={{ marginBottom: 0 }}>\r\n                            <Form.Item\r\n                                name=\"level\"\r\n                                style={{ display: 'inline-block', width: 'calc(80% - 8px)' }}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: \"证书级别不能为空\"\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select\r\n                                    placeholder=\"请选择证书级别\"\r\n                                    allowClear\r\n                                >\r\n                                    <Option value=\"1\">一级</Option>\r\n                                    <Option value=\"2\">二级</Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"存储服务器\" style={{ marginBottom: 0 }}>\r\n                            <Form.Item\r\n                                name=\"server\"\r\n                                style={{ display: 'inline-block', width: 'calc(80% - 8px)' }}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: \"存储服务器不能为空\"\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select\r\n                                    placeholder=\"请选择存储服务器\"\r\n                                    allowClear\r\n                                >\r\n                                    <Option value=\"1\">服务器一</Option>\r\n                                    <Option value=\"2\">服务器二</Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"share\"\r\n                            label=\"是否允许中心共享\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"中心共享不能为空\"\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Radio.Group name=\"radiogroup\">\r\n                                <Radio value={1}>是</Radio>\r\n                                <Radio value={0}>否</Radio>\r\n                            </Radio.Group>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"描述\" style={{ marginBottom: 0 }}>\r\n                            <Form.Item\r\n                                name=\"describe\"\r\n                                style={{ display: 'inline-block', width: 'calc(80% - 8px)' }}\r\n                                rules={[\r\n                                    {\r\n                                        pattern: /^[a-zA-Z0-9_()（），。,.\\u4e00-\\u9fa5]{0,128}$/,\r\n                                        message: '描述只能为汉字、字母、数字、下划线或中英文逗号、句号和括号'\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <TextArea rows={4} />\r\n                            </Form.Item>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport echarts from 'echarts'\r\n\r\nexport default class Line extends React.Component {\r\n    state = {\r\n        my_option: {\r\n            xAxis: {\r\n                type: 'category',\r\n                boundaryGap: false\r\n            },\r\n            yAxis: {\r\n                type: 'value',\r\n                boundaryGap: [0, '30%']\r\n            },\r\n            visualMap: {\r\n                type: 'piecewise',\r\n                show: false,\r\n                dimension: 0,\r\n                seriesIndex: 0,\r\n                pieces: [{\r\n                    gt: 1,\r\n                    lt: 3,\r\n                    color: 'rgba(0, 180, 0, 0.5)'\r\n                }, {\r\n                    gt: 5,\r\n                    lt: 7,\r\n                    color: 'rgba(0, 180, 0, 0.5)'\r\n                }]\r\n            },\r\n            series: [\r\n                {\r\n                    type: 'line',\r\n                    smooth: 0.6,\r\n                    symbol: 'none',\r\n                    lineStyle: {\r\n                        color: 'green',\r\n                        width: 5\r\n                    },\r\n                    markLine: {\r\n                        symbol: ['none', 'none'],\r\n                        label: { show: false },\r\n                        data: [\r\n                            { xAxis: 1 },\r\n                            { xAxis: 3 },\r\n                            { xAxis: 5 },\r\n                            { xAxis: 7 }\r\n                        ]\r\n                    },\r\n                    areaStyle: {},\r\n                    data: [\r\n                        ['2019-10-10', 200],\r\n                        ['2019-10-11', 400],\r\n                        ['2019-10-12', 650],\r\n                        ['2019-10-13', 500],\r\n                        ['2019-10-14', 250],\r\n                        ['2019-10-15', 300],\r\n                        ['2019-10-16', 450],\r\n                        ['2019-10-17', 300],\r\n                        ['2019-10-18', 100]\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let myChart = echarts.init(document.getElementById(\"line-chart\"));\r\n        myChart.setOption(this.state.my_option);\r\n    }\r\n\r\n    render() {\r\n        return (<>\r\n            <div id=\"line-chart\" style={{height: 300}}></div>\r\n        </>)\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Bar extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Bar\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Pie extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Pie\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Form, Button, Input, InputNumber, Select, Checkbox, Radio } from 'antd'\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 8,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\n\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 8,\r\n        span: 16,\r\n    },\r\n};\r\n\r\nexport default class FormCom extends React.Component {\r\n    state = {\r\n        value: 0,\r\n    };\r\n\r\n    onChange = e => {\r\n        console.log('radio checked', e.target.value);\r\n        this.setState({\r\n            value: e.target.value,\r\n        });\r\n    };\r\n\r\n    formRef = React.createRef();\r\n\r\n    onFinish = values => {\r\n        console.log(values);\r\n    };\r\n\r\n    onReset = () => {\r\n        this.formRef.current.resetFields();\r\n    };\r\n\r\n    render() {\r\n        return (<>\r\n            <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\r\n                <Form.Item label=\"账号\" style={{ marginBottom: 0}}>\r\n                    <Form.Item\r\n                        name=\"account\"\r\n                        style={{ display: 'inline-block', width: 'calc(80% - 8px)', marginRight: 15 }}\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"账号不能为空\"\r\n                            },\r\n                            {\r\n                                pattern: /^[a-zA-Z0-9_()（）\\u4e00-\\u9fa5]{1,32}$/,\r\n                                message: \"账号为1至32位汉字、字母、数字、下划线或中英文括号\"\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        style={{ display: 'inline-block', width: 'calc(20% - 8px)' }}\r\n                    >\r\n                        <Checkbox>USBKEY</Checkbox>\r\n                    </Form.Item>\r\n                </Form.Item>\r\n                <Form.Item label=\"姓名\" style={{ marginBottom: 0 }}>\r\n                    <Form.Item\r\n                        name=\"name\"\r\n                        style={{ display: 'inline-block', width: 'calc(80% - 8px)' }}\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"姓名不能为空\"\r\n                            },\r\n                            {\r\n                                pattern: /^[a-zA-Z0-9_()（）\\u4e00-\\u9fa5]{1,32}$/,\r\n                                message: \"姓名为1至32位汉字、字母、数字、下划线或中英文括号\"\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                </Form.Item>\r\n                <Form.Item label=\"个人空间配额\">\r\n                    <Form.Item\r\n                        name=\"space\"\r\n                        noStyle\r\n                        rules={[{\r\n                            required: true,\r\n                            message: \"个人空间配额不能为空\"\r\n                        }, {\r\n                            type: 'number',\r\n                            min: 1,\r\n                            max: 100,\r\n                            message: \"个人空间配额为1-100之间整数\"\r\n                        }\r\n                        ]}\r\n                    >\r\n                        <InputNumber style={{ width: 160, marginRight: 15 }} placeholder=\"1-100之间整数\"/>\r\n                    </Form.Item>\r\n                    G\r\n                </Form.Item>\r\n                <Form.Item label=\"私密空间配额\">\r\n                    <Form.Item\r\n                        name=\"private\"\r\n                        noStyle\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"私密空间配额不能为空\"\r\n                            }, {\r\n                                type: 'number',\r\n                                min: 1,\r\n                                max: 100,\r\n                                message: \"私密空间配额为1-100之间整数\"\r\n                            }\r\n                        ]}\r\n                    >\r\n                        <InputNumber style={{ width: 160, marginRight: 15 }} placeholder=\"1-100之间整数\"/>\r\n                    </Form.Item>\r\n                    G\r\n                </Form.Item>\r\n                <Form.Item label=\"证书级别\" style={{ marginBottom: 0 }}>\r\n                    <Form.Item\r\n                        name=\"level\"\r\n                        style={{ display: 'inline-block', width: 'calc(80% - 8px)' }}\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"证书级别不能为空\"\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Select\r\n                            placeholder=\"请选择证书级别\"\r\n                            onChange={this.onGenderChange}\r\n                            allowClear\r\n                        >\r\n                            <Option value=\"1\">一级</Option>\r\n                            <Option value=\"2\">二级</Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n                </Form.Item>\r\n                <Form.Item label=\"存储服务器\" style={{ marginBottom: 0 }}>\r\n                    <Form.Item\r\n                        name=\"server\"\r\n                        style={{ display: 'inline-block', width: 'calc(80% - 8px)' }}\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"存储服务器不能为空\"\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Select\r\n                            placeholder=\"请选择存储服务器\"\r\n                            onChange={this.onGenderChange}\r\n                            allowClear\r\n                        >\r\n                            <Option value=\"1\">服务器一</Option>\r\n                            <Option value=\"2\">服务器二</Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"share\"\r\n                    label=\"是否允许中心共享\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"中心共享不能为空\"\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Radio.Group name=\"radiogroup\">\r\n                        <Radio value={1}>是</Radio>\r\n                        <Radio value={0}>否</Radio>\r\n                    </Radio.Group>\r\n                </Form.Item>\r\n                <Form.Item label=\"描述\" style={{ marginBottom: 0 }}>\r\n                    <Form.Item\r\n                        name=\"describe\"\r\n                        style={{ display: 'inline-block', width: 'calc(80% - 8px)' }}\r\n                        rules={[\r\n                            {\r\n                                pattern: /^[a-zA-Z0-9_()（），。,.\\u4e00-\\u9fa5]{0,128}$/,\r\n                                message: '描述只能为汉字、字母、数字、下划线或中英文逗号、句号和括号'\r\n                            }\r\n                        ]}\r\n                    >\r\n                        <TextArea rows={4} />\r\n                    </Form.Item>\r\n                </Form.Item>\r\n                <Form.Item {...tailLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        提交\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </>)\r\n    }\r\n}","import React from 'react'\r\nimport { Row, Col, Table, Pagination, notification, Space, Button } from 'antd'\r\nimport axios from 'axios'\r\n\r\nexport default class TableCom extends React.Component {\r\n    state = {\r\n        tableData: [],\r\n        selectedRowKeys: [], // Check here to configure the default column\r\n        total: 0, // for Pagination\r\n        columns: [\r\n            {\r\n                title: 'ID',\r\n                dataIndex: 'id',\r\n                width: 30,\r\n            },\r\n            {\r\n                title: '标题',\r\n                dataIndex: 'title',\r\n                width: 500,\r\n            },\r\n            {\r\n                title: '内容',\r\n                dataIndex: 'content'\r\n            },\r\n        ]\r\n    };\r\n\r\n    handleDeleteArticle() {\r\n        if (this.state.selectedRowKeys.length === 0) {\r\n            notification['error']({\r\n                message: '错误提示',\r\n                description:\r\n                    '请选择要删除的内容！',\r\n            });\r\n        } else {\r\n            notification['success']({\r\n                message: '正确提示',\r\n                description:\r\n                    `将要删除${JSON.stringify(this.state.selectedRowKeys)}`,\r\n            });\r\n        }\r\n    }\r\n\r\n    onSelectChange = selectedRowKeys => {\r\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n        this.setState({ selectedRowKeys });\r\n    };\r\n\r\n    // 获取表格数据\r\n    getData(pageNumber, pageSize) {\r\n        axios.get(`/article/all/?pageSize=${pageSize}&pageNumber=${pageNumber}&sortName=id&sortOrder=desc&_=1595230808893`).then((resp) => {\r\n            console.log(\"all data:\");\r\n            console.log(resp);\r\n            let ajaxData = [];\r\n            for (let i = 0; i < resp.data.rows.length; i++) {\r\n                ajaxData.push({\r\n                    key: resp.data.rows[i].id,\r\n                    id: resp.data.rows[i].id,\r\n                    title: resp.data.rows[i].title,\r\n                    content: resp.data.rows[i].content,\r\n                });\r\n            }\r\n\r\n            this.setState({\r\n                tableData: ajaxData,\r\n                total: resp.data.total\r\n            })\r\n\r\n        }, (err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    onChange = (pageNumber, pageSize) => {\r\n        this.getData(pageNumber, pageSize);\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getData(1, 10);\r\n    }\r\n\r\n    render() {\r\n        const { selectedRowKeys } = this.state;\r\n\r\n        const rowSelection = {\r\n            selectedRowKeys,\r\n            onChange: this.onSelectChange\r\n        };\r\n\r\n        return (<>\r\n            <Row style={{ paddingBottom: 15 }}>\r\n                <Col span={24}><Space size=\"small\"><Button type=\"primary\" ghost>添加</Button><Button type=\"primary\" ghost onClick={() => this.handleDeleteArticle()}>删除</Button></Space></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <Table columns={this.state.columns} dataSource={this.state.tableData} rowSelection={rowSelection} pagination={false} bordered\r\n                        onRow={record => {\r\n                            return {\r\n                                onClick: event => { console.log(record) },\r\n                                onDoubleClick: event => { console.log(event) }\r\n                            }\r\n                        }}\r\n                    >\r\n                    </Table>\r\n                    <div style={{ height: 15 }}></div>\r\n                    <Pagination\r\n                        total={this.state.total}\r\n                        showSizeChanger\r\n                        showQuickJumper\r\n                        showTotal={total => `共 ${total} 条`}\r\n                        onChange={this.onChange}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </>);\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Tabs } from 'antd'\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nfunction callback(key) {\r\n    console.log(key);\r\n}\r\n\r\nexport default class TabsCom extends Component {\r\n    render() {\r\n        return (\r\n            <Tabs defaultActiveKey=\"1\" onChange={callback}>\r\n                <TabPane tab=\"Tab 1\" key=\"1\">\r\n                    Content of Tab Pane 1\r\n            </TabPane>\r\n                <TabPane tab=\"Tab 2\" key=\"2\">\r\n                    Content of Tab Pane 2\r\n            </TabPane>\r\n                <TabPane tab=\"Tab 3\" key=\"3\">\r\n                    Content of Tab Pane 3\r\n            </TabPane>\r\n            </Tabs>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Modal, Form, Input, Button, InputNumber, Select, Checkbox, Radio } from 'antd';\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 5,\r\n    },\r\n    wrapperCol: {\r\n        span: 19,\r\n    }\r\n};\r\n\r\nexport default class ModalCom extends React.Component {\r\n    state = {\r\n        visible: false,\r\n        value: 0\r\n    };\r\n\r\n    // Modal相关\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    }\r\n\r\n    handleOk = e => {\r\n        this.formRef.current.validateFields()\r\n            .then(values => {\r\n                this.formRef.current.resetFields();\r\n                this.setState({\r\n                    visible: false\r\n                });\r\n                console.log(\"表单值：\");\r\n                console.log(values);\r\n            })\r\n            .catch(info => {\r\n                console.log('Validate Failed:', info);\r\n            });\r\n    }\r\n\r\n    handCancel = e => {\r\n        this.formRef.current.resetFields();\r\n        this.setState({\r\n            visible: false\r\n        })\r\n    }\r\n\r\n    handleAfterClose = () => {\r\n        console.log(\"modal 关闭了！\");\r\n    }\r\n\r\n    // 表单相关\r\n    formRef = React.createRef(); // 定义一个表单\r\n\r\n    render() {\r\n        return (<>\r\n            <Button type=\"primary\" onClick={this.showModal}>\r\n                创建\r\n        \t</Button>\r\n\r\n            <Modal\r\n                title=\"创建\"\r\n                visible={this.state.visible}\r\n                width={660}\r\n                onOk={this.handleOk}\r\n                onCancel={this.handCancel}\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                afterClose={this.handleAfterClose}\r\n                maskClosable={false}\r\n                destroyOnClose={true}\r\n            >\r\n                <Form {...layout} ref={this.formRef} name=\"control-ref\" preserve={false}>\r\n                    <Form.Item label=\"账号\" style={{ marginBottom: 0 }}>\r\n                        <Form.Item\r\n                            name=\"account\"\r\n                            style={{ display: 'inline-block', width: 'calc(80% - 8px)', marginRight: 15 }}\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"账号不能为空\"\r\n                                },\r\n                                {\r\n                                    pattern: /^[a-zA-Z0-9_()（）\\u4e00-\\u9fa5]{1,32}$/,\r\n                                    message: \"账号为1至32位汉字、字母、数字、下划线或中英文括号\"\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            style={{ display: 'inline-block', width: 'calc(20% - 8px)' }}\r\n                        >\r\n                            <Checkbox>USBKEY</Checkbox>\r\n                        </Form.Item>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"姓名\" style={{ marginBottom: 0 }}>\r\n                        <Form.Item\r\n                            name=\"name\"\r\n                            style={{ display: 'inline-block', width: 'calc(80% - 8px)' }}\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"姓名不能为空\"\r\n                                },\r\n                                {\r\n                                    pattern: /^[a-zA-Z0-9_()（）\\u4e00-\\u9fa5]{1,32}$/,\r\n                                    message: \"姓名为1至32位汉字、字母、数字、下划线或中英文括号\"\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"个人空间配额\">\r\n                        <Form.Item\r\n                            name=\"space\"\r\n                            noStyle\r\n                            rules={[{\r\n                                required: true,\r\n                                message: \"个人空间配额不能为空\"\r\n                            }, {\r\n                                type: 'number',\r\n                                min: 1,\r\n                                max: 100,\r\n                                message: \"个人空间配额为1-100之间整数\"\r\n                            }\r\n                            ]}\r\n                        >\r\n                            <InputNumber style={{ width: 160, marginRight: 15 }} placeholder=\"1-100之间整数\" />\r\n                        </Form.Item>\r\n                        G\r\n                </Form.Item>\r\n                    <Form.Item label=\"私密空间配额\">\r\n                        <Form.Item\r\n                            name=\"private\"\r\n                            noStyle\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"私密空间配额不能为空\"\r\n                                }, {\r\n                                    type: 'number',\r\n                                    min: 1,\r\n                                    max: 100,\r\n                                    message: \"私密空间配额为1-100之间整数\"\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <InputNumber style={{ width: 160, marginRight: 15 }} placeholder=\"1-100之间整数\" />\r\n                        </Form.Item>\r\n                        G\r\n                </Form.Item>\r\n                    <Form.Item label=\"证书级别\" style={{ marginBottom: 0 }}>\r\n                        <Form.Item\r\n                            name=\"level\"\r\n                            style={{ display: 'inline-block', width: 'calc(80% - 8px)' }}\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"证书级别不能为空\"\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Select\r\n                                placeholder=\"请选择证书级别\"\r\n                                allowClear\r\n                            >\r\n                                <Option value=\"1\">一级</Option>\r\n                                <Option value=\"2\">二级</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"存储服务器\" style={{ marginBottom: 0 }}>\r\n                        <Form.Item\r\n                            name=\"server\"\r\n                            style={{ display: 'inline-block', width: 'calc(80% - 8px)' }}\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"存储服务器不能为空\"\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Select\r\n                                placeholder=\"请选择存储服务器\"\r\n                                allowClear\r\n                            >\r\n                                <Option value=\"1\">服务器一</Option>\r\n                                <Option value=\"2\">服务器二</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"share\"\r\n                        label=\"是否允许中心共享\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"中心共享不能为空\"\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Radio.Group name=\"radiogroup\">\r\n                            <Radio value={1}>是</Radio>\r\n                            <Radio value={0}>否</Radio>\r\n                        </Radio.Group>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"描述\" style={{ marginBottom: 0 }}>\r\n                        <Form.Item\r\n                            name=\"describe\"\r\n                            style={{ display: 'inline-block', width: 'calc(80% - 8px)' }}\r\n                            rules={[\r\n                                {\r\n                                    pattern: /^[a-zA-Z0-9_()（），。,.\\u4e00-\\u9fa5]{0,128}$/,\r\n                                    message: '描述只能为汉字、字母、数字、下划线或中英文逗号、句号和括号'\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <TextArea rows={4} />\r\n                        </Form.Item>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        </>)\r\n    }\r\n}","import React from 'react';\r\nimport { Modal, Form, Input, Button, InputNumber, Select, Checkbox, Radio } from 'antd';\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 5,\r\n    },\r\n    wrapperCol: {\r\n        span: 19,\r\n    }\r\n};\r\n\r\nexport default class MenuCom extends React.Component {\r\n    state = {\r\n        visible: false,\r\n        value: 0\r\n    };\r\n\r\n    // Modal相关\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    }\r\n\r\n    handleOk = e => {\r\n        this.formRef.current.validateFields()\r\n            .then(values => {\r\n                this.formRef.current.resetFields();\r\n                this.setState({\r\n                    visible: false\r\n                });\r\n                console.log(\"表单值：\");\r\n                console.log(values);\r\n            })\r\n            .catch(info => {\r\n                console.log('Validate Failed:', info);\r\n            });\r\n    }\r\n\r\n    handCancel = e => {\r\n        this.formRef.current.resetFields();\r\n        this.setState({\r\n            visible: false\r\n        })\r\n    }\r\n\r\n    handleAfterClose = () => {\r\n        console.log(\"modal 关闭了！\");\r\n    }\r\n\r\n    // 表单相关\r\n    formRef = React.createRef(); // 定义一个表单\r\n\r\n    render() {\r\n        return (<>\r\n            <Button type=\"primary\" onClick={this.showModal}>\r\n                创建\r\n        \t</Button>\r\n\r\n            <Modal\r\n                title=\"创建\"\r\n                visible={this.state.visible}\r\n                width={660}\r\n                onOk={this.handleOk}\r\n                onCancel={this.handCancel}\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                afterClose={this.handleAfterClose}\r\n                maskClosable={false}\r\n                destroyOnClose={true}\r\n            >\r\n                <Form {...layout} ref={this.formRef} name=\"control-ref\" preserve={false}>\r\n                    <Form.Item label=\"账号\" style={{ marginBottom: 0 }}>\r\n                        <Form.Item\r\n                            name=\"account\"\r\n                            style={{ display: 'inline-block', width: 'calc(80% - 8px)', marginRight: 15 }}\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"账号不能为空\"\r\n                                },\r\n                                {\r\n                                    pattern: /^[a-zA-Z0-9_()（）\\u4e00-\\u9fa5]{1,32}$/,\r\n                                    message: \"账号为1至32位汉字、字母、数字、下划线或中英文括号\"\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            style={{ display: 'inline-block', width: 'calc(20% - 8px)' }}\r\n                        >\r\n                            <Checkbox>USBKEY</Checkbox>\r\n                        </Form.Item>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"姓名\" style={{ marginBottom: 0 }}>\r\n                        <Form.Item\r\n                            name=\"name\"\r\n                            style={{ display: 'inline-block', width: 'calc(80% - 8px)' }}\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"姓名不能为空\"\r\n                                },\r\n                                {\r\n                                    pattern: /^[a-zA-Z0-9_()（）\\u4e00-\\u9fa5]{1,32}$/,\r\n                                    message: \"姓名为1至32位汉字、字母、数字、下划线或中英文括号\"\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"个人空间配额\">\r\n                        <Form.Item\r\n                            name=\"space\"\r\n                            noStyle\r\n                            rules={[{\r\n                                required: true,\r\n                                message: \"个人空间配额不能为空\"\r\n                            }, {\r\n                                type: 'number',\r\n                                min: 1,\r\n                                max: 100,\r\n                                message: \"个人空间配额为1-100之间整数\"\r\n                            }\r\n                            ]}\r\n                        >\r\n                            <InputNumber style={{ width: 160, marginRight: 15 }} placeholder=\"1-100之间整数\" />\r\n                        </Form.Item>\r\n                        G\r\n                </Form.Item>\r\n                    <Form.Item label=\"私密空间配额\">\r\n                        <Form.Item\r\n                            name=\"private\"\r\n                            noStyle\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"私密空间配额不能为空\"\r\n                                }, {\r\n                                    type: 'number',\r\n                                    min: 1,\r\n                                    max: 100,\r\n                                    message: \"私密空间配额为1-100之间整数\"\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <InputNumber style={{ width: 160, marginRight: 15 }} placeholder=\"1-100之间整数\" />\r\n                        </Form.Item>\r\n                        G\r\n                </Form.Item>\r\n                    <Form.Item label=\"证书级别\" style={{ marginBottom: 0 }}>\r\n                        <Form.Item\r\n                            name=\"level\"\r\n                            style={{ display: 'inline-block', width: 'calc(80% - 8px)' }}\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"证书级别不能为空\"\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Select\r\n                                placeholder=\"请选择证书级别\"\r\n                                allowClear\r\n                            >\r\n                                <Option value=\"1\">一级</Option>\r\n                                <Option value=\"2\">二级</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"存储服务器\" style={{ marginBottom: 0 }}>\r\n                        <Form.Item\r\n                            name=\"server\"\r\n                            style={{ display: 'inline-block', width: 'calc(80% - 8px)' }}\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"存储服务器不能为空\"\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Select\r\n                                placeholder=\"请选择存储服务器\"\r\n                                allowClear\r\n                            >\r\n                                <Option value=\"1\">服务器一</Option>\r\n                                <Option value=\"2\">服务器二</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"share\"\r\n                        label=\"是否允许中心共享\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"中心共享不能为空\"\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Radio.Group name=\"radiogroup\">\r\n                            <Radio value={1}>是</Radio>\r\n                            <Radio value={0}>否</Radio>\r\n                        </Radio.Group>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"描述\" style={{ marginBottom: 0 }}>\r\n                        <Form.Item\r\n                            name=\"describe\"\r\n                            style={{ display: 'inline-block', width: 'calc(80% - 8px)' }}\r\n                            rules={[\r\n                                {\r\n                                    pattern: /^[a-zA-Z0-9_()（），。,.\\u4e00-\\u9fa5]{0,128}$/,\r\n                                    message: '描述只能为汉字、字母、数字、下划线或中英文逗号、句号和括号'\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <TextArea rows={4} />\r\n                        </Form.Item>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        </>)\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Layout, Menu, Row, Col, Dropdown } from 'antd';\r\nimport { Route, Redirect, Switch } from 'react-router-dom'\r\nimport { DownOutlined } from '@ant-design/icons';\r\nimport LeftNav from '../../components/left-nav/'\r\nimport HomeCom from '../home/home'\r\nimport LineCom from '../charts/line'\r\nimport BarCom from '../charts/bar'\r\nimport PieCom from '../charts/pie'\r\nimport FormCom from '../data-input/form'\r\nimport TableCom from '../data-show/table'\r\nimport TabsCom from '../data-show/tabs'\r\nimport ModalCom from '../feedback/modal'\r\nimport NotificationCom from '../feedback/notification'\r\n\r\nconst { Header, Content, Sider } = Layout;\r\n\r\nexport default class Admin extends Component {\r\n    state = {\r\n        collapsed: false\r\n    };\r\n\r\n    // 控制菜单左右收缩\r\n    onCollapse = collapsed => {\r\n        this.setState({ collapsed });\r\n    };\r\n\r\n    render() {\r\n        if (Number(localStorage['token']) === 0) {\r\n            // 自动跳转到登陆(在render()中)\r\n            return <Redirect to='/login' />;\r\n        }\r\n        \r\n        const loginOut = e => {\r\n            e.preventDefault();\r\n            localStorage['token'] = 0;\r\n            this.props.history.replace(\"/login\");\r\n        }\r\n\r\n        const menu = (\r\n            <Menu>\r\n                <Menu.Item>\r\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.alipay.com/\" onClick={loginOut}>\r\n                        退出\r\n                    </a>\r\n                </Menu.Item>\r\n            </Menu>\r\n        );\r\n\r\n        return (\r\n            <Layout style={{ height: '100%' }}>\r\n                <Header className=\"header\" style={{ position: 'fixed', zIndex: 1, width: '100%', paddingLeft: '20px' }}>\r\n                    <Row>\r\n                        <Col span={10}><div className=\"logo\" style={{ color: \"#ffffff\", fontSize: '32px', fontWeight: 'bold' }}>React App</div></Col>\r\n                        <Col span={2} offset={12} style={{ textAlign: 'right' }}>\r\n                            <Dropdown overlay={menu} trigger={['click']}>\r\n                                <a className=\"ant-dropdown-link\" href=\"#\" onClick={e => e.preventDefault()}>\r\n                                    admin <DownOutlined />\r\n                                </a>\r\n                            </Dropdown>\r\n                        </Col>\r\n                    </Row>\r\n                </Header>\r\n                <Layout style={{ height: '100%' }}>\r\n                    {/*collapsible、collapsed、onCollapse：控制整个菜单的左右收缩*/}\r\n                    <Sider width={200} style={{ background: '#000000' }} className=\"site-layout-background\" collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse}>\r\n                        <LeftNav />\r\n                    </Sider>\r\n                    <Layout className=\"site-layout\" style={{ paddingTop: 64 }}>\r\n                        <Content\r\n                            className=\"site-layout-background\"\r\n                            style={{\r\n                                padding: 15,\r\n                                margin: 0,\r\n                                height: '100%',\r\n                                overflow: 'auto'\r\n                            }}\r\n                        >\r\n                            <Switch>\r\n                                <Route path=\"/home\" component={HomeCom}></Route>\r\n                                <Route path=\"/line\" component={LineCom}></Route>\r\n                                <Route path=\"/bar\" component={BarCom}></Route>\r\n                                <Route path=\"/pie\" component={PieCom}></Route>\r\n                                <Route path=\"/form\" component={FormCom}></Route>\r\n                                <Route path=\"/table\" component={TableCom}></Route>\r\n                                <Route path=\"/tabs\" component={TabsCom}></Route>\r\n                                <Route path=\"/modal\" component={ModalCom}></Route>\r\n                                <Route path=\"/notification\" component={NotificationCom}></Route>\r\n                                <Redirect to=\"/home\" />\r\n                            </Switch>\r\n                        </Content>\r\n                    </Layout>\r\n                </Layout>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom'\nimport Login from './pages/login/login';\nimport Admin from './pages/admin/admin';\n\nclass App extends React.Component {\n  render() {\n    return (<HashRouter>\n      <Switch>\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/\" component={Admin} />\n      </Switch>\n    </HashRouter>)\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less';\nimport App from './App';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n","module.exports = __webpack_public_path__ + \"static/media/logo.ba1f87ec.png\";"],"sourceRoot":""}